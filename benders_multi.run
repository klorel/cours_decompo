
model benders_multi.mod;

minimize coordination_obj: alpha;

repeat{
	let CURRENT_ITE := CURRENT_ITE+1;
	let ITERATIONS := ITERATIONS union{CURRENT_ITE};
	problem coordination;
	#expand;
	
	option xpress_options 'outlev=1 threads=1 presolve=1';
	
	solve > trash_coordination.log;
	let LB := alpha;
	let{area in AREA, prod in NEW_PROD}CUT_POINT[CURRENT_ITE, area, prod] := p_max_new[area, prod];
	#expand;
	problem simulation;	
	
	option xpress_options 'outlev=1 threads=1 presolve=0';
	solve simulation_cost > trash_simulation.log;
	#display p_max_new;
	
	let{week in WEEK} CUT_RHS[CURRENT_ITE, week] :=
	(
		+sum{area in AREA, prod in PROD, (week, start, end) in WEEK_START_END, ts in start .. end-1}p[area, prod, ts]*ENERGY_COST[prod]
		+sum{area in AREA, prod in NEW_PROD, (week, start, end) in WEEK_START_END, ts in start .. end-1}p_new[area, prod, ts]*ENERGY_COST[prod]
		+sum{area in AREA, (week, start, end) in WEEK_START_END, ts in start .. end-1}lol[area, ts]*VALUE_OF_LOSS_LOAD
		+sum{(neighbor1, neighbor2) in INTERCO, (week, start, end) in WEEK_START_END, ts in start .. end-1}1e-4 * p_interco[neighbor1, neighbor2, ts]
	)/N_WEEK;
	let UB := overall_cost;
	if UB < BEST_UB then {
		let BEST_UB := UB;
	};
	#display sum{week in WEEK}CUT_RHS[CURRENT_ITE, week], simulation_cost, overall_cost;
	let{area in AREA, prod in NEW_PROD, week in WEEK}CUT_COEFF[CURRENT_ITE, area, prod, week] := sum{(week, start, end) in WEEK_START_END, ts in start .. end-1}ctr_pmax_new[area, prod, ts];
	
	if BEST_UB - LB <= EPS then{
		let STOP := 1;
	};
	printf "%6d%20.10E%20.10E%20.10E\n", CURRENT_ITE, LB, UB, BEST_UB;
	
	
} while STOP != 1;

display p_max_new;